apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility=1.6
targetCompatibility=1.6

version = '0.5.8'

repositories {
  mavenCentral()
}

dependencies {
  compile      'org.codehaus.groovy:groovy-all:2.2.1'
  testCompile  'junit:junit:4.10'
  testCompile( 'org.apache.ant:ant-junit:1.8.4' ) {
      exclude(group: 'junit', module: 'junit')
  }
  testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
  testCompile fileTree( dir:'build/libs/', includes:[ "groovy-common-extensions-${version}.jar".toString() ] )
  testRuntime 'net.sourceforge.nekohtml:nekohtml:1.9.14'
}

group = 'com.bloidonia'

task generateModule << {
  def extensionFiles = sourceSets.main.groovy.with { g ->
    g.findAll {
      it.parentFile.name == 'extensions' && it.name.endsWith( 'groovy' )
    }.collect {
      it.toString().replaceAll( File.separator, '.' )
    }.collect {
      it - ( g.srcDirs as List )[0].toString().replaceAll( File.separator, '.' )
    }.collect {
      it[ 1..-8 ]
    }.join( ',' )
  }
  new File( "$buildDir/classes/main/META-INF/services" ).with { f ->
    f.mkdirs()
    new File( f, 'org.codehaus.groovy.runtime.ExtensionModule' ).withWriter { w ->
      w.writeLine 'moduleName=groovy-common-extensions'
      w.writeLine "moduleVersion=$version"
      w.writeLine "extensionClasses=$extensionFiles"
      w.writeLine 'staticExtensionClasses='
    }
  }
}

// Hook up dependencies
jar.dependsOn( generateModule ) 
test.dependsOn( jar )
uploadArchives.dependsOn( test )

groovydoc {
  use             = true
  destinationDir  = new File( "${project.buildDir.path}/groovydoc", project.version )
  header = '<a href="https://github.com/timyates/groovy-common-extensions">groovy-common-extensions</a>'
  footer = null

  link 'http://download.oracle.com/javase/6/docs/api/',                 'java.'
  link 'http://groovy.codehaus.org/api/',                               'groovy.', 'org.codehaus.groovy.'
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
  classifier 'javadoc'
  from groovydoc.destinationDir
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

artifacts {
  archives jar
  archives sourcesJar
  archives groovydocJar
}

if( !hasProperty( 'sonatypeUsername' ) ) {
    ext.sonatypeUsername = ''
}

if( !hasProperty( 'sonatypePassword' ) ) {
    ext.sonatypePassword = ''
}

signing {
  sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
 
      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: sonatypeUsername, password: sonatypePassword)
      }
 
      pom.project {
        name 'Groovy Common Extensions'
        packaging 'jar'
        description 'A collection of extensions to Groovy 2+.'
        url 'https://github.com/timyates/groovy-common-extensions'
        inceptionYear '2012'

        scm {
          url 'https://github.com/timyates/groovy-common-extensions'
          connection 'scm:https://github.com/timyates/groovy-common-extensions.git'
          developerConnection 'scm:git://github.com/timyates/groovy-common-extensions.git'
        }

        licenses {
          license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
          }
        }

        developers {
          developer {
            id 'tim_yates'
            name 'Tim Yates'
            email 'tim.yates@gmail.com'
          }
        }
      }
    }
  }
}

test {
  testLogging {
    quiet {
      events 'failed'
      exceptionFormat 'short'
    }
  }
}
